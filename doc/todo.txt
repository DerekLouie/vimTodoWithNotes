*todo.txt*  Vim todo list plugin

Vim todo list plugin                                            *vimtodo*

Plugin for managing hierarchical to do lists in vim.

==============================================================================
ABOUT                                                   *vimtodo-about*

Vimtodo originally started out as a set of syntax highlights for the todo.txt
(http://www.todotxt.com/) format in vim with a few added extras such as
subtasks. However, it quickly grew into a fully fledged task management
system, taking several ideas from Emacs' org-mode (http://www.orgmode.org/).

==============================================================================
INSTALLATION                                            *vimtodo-installation*

Vimtodo is distributed as a |vimball| package. To install it, to the
following: >
    vim vimtodo.vba
    :so %
    :q

This will install the plugin in your ~/.vim directory, or a different
directory if you have configured vim to install plugins elsewhere.

==============================================================================
BASIC TODO ENTRIES                                      *vimtodo-basics*

To start with, open up a new file, and add the following line to the
beginning: >
    # vim:ft=todo

This line tells vim that the file is a vimtodo file. See |modeline| for more
information. Now write the file, quit and reopen it. Alternative, you can just
type the following to set the filetype without reopening the file: >
    :set ft=todo

To do entries are simply lines in the file that follow a specific format. Add
the following line into the file: >
    TODO 2009-09-01 @computer +learnvim Read vim tutorial

This is a todo entry. You can also add a new entry, with the 'cn' alias. In
insert mode, type 'cn' and a new todo entry along with the current date will
be added. You can also use <Leader>cn in normal mode to add a new entry.

The todo entry is made up of several parts:

    TODO - the task status, this is something like TODO, DONE, WAITING
    2009-09-01 - the task creation date
    @computer - the context of the task, in this case, something to do at the
                computer
    +learnvim - the project the task is associated with

Giving multiple tasks a context or project tag allows you to filter out just
the tasks you are interested in using the filter function (described later).

For now, press escape to go back to normal mode, make sure the cursor is on
the same line at the todo entry you just added, and press <Leader>cs (\cs by
default). The task status will change to 'DONE' and the line will be
greyed out. Here, several things have happened:

    - The task status changed from TODO to DONE
    - The entire task changes color to show that the task is complete
    - A CLOSED: line has been added underneath showing the date and time that
      the task was closed.
    - A logbook entry has been added (but is currently hidden), logging the
      time and date of the task state change.

A CLOSED: entry is added whenever a task is closed, and will be removed
if a task is re-opened.

Logbook entries however, log the date and time every time you change the state
of a task, and look like this: >

    :LOGBOOK:
        TODO: 2009-09-30 18:19:51
        CANCELLED: 2009-09-30 18:19:50
        DONE: 2009-09-30 18:12:58

Currently the todo entry is folded, so move the cursor to the fold line (just
below the todo entry) and press zO to open all the folds. Then move the cursor
back to the todo line and press <Leader>cs to change the task status a few
times to see the behavior of the closed/logbook lines.

If desired, the display of closed/logbook lines can be turned off in your
.vimrc. See the configuration section for more details.

You can add more information to a task using normal text editing commands.
Anything that is indented is considered to be information that is part of a
todo entry. For example, the closed and logbook lines are indented and
considered part of the todo entry.

- Due date
    - filtering
- More filtering - context/project

==============================================================================
TASK STATES
    - \cs
    - Done states
        - Some states are considered DONE
            - special highlighting
            - CLOSED: tag (see below)
    - Logging
        - CLOSED
        - LOGBOOK drawer
        - Logging settings
    - Select a task \cv
    - Custom task states
        - Shortcut keys
        - Multiple task cycles
        - Done states - "|" or last state in a cycle
            - Use "|" at the beginning for all done states in a cycle
            - Use "|" at the end for no done states in a cycle
        - Colors

==============================================================================
ARCHIVING
    - \cd
    - Archives to a single file, default done.txt in the same directory as the
      todo file.
    - Customizable with the g:todo_done_file setting
==============================================================================
FILTERING
    - By context, project, task ID
    - Due date
    - Task status
        - Closed/Open
==============================================================================
CHECKBOXES
    - \cc
    - Progression - ' ', X; +,-,.; Y,N,?
    - Custom progression
    - Special checkbox types (when implemented)

==============================================================================
TASK LINKS
    - External task management system
        tidXXXX
        todo_taskurl
        todo_browser
        \ct
    - URL opening
        \cl - todo_browser

==============================================================================
FOLDING
    - This is mostly vim folding based on indentation level
    - Mention some basics

==============================================================================
CONFIGURATION
    - Reference all the config options
    - vimrc
    - in file
==============================================================================
  vim:ft=help:tw=78


